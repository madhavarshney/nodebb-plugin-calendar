{"version":3,"sources":["../../src/lib/translatorModule.js"],"names":["justDate","justTime","dateAndTime","formatDates","s","e","allday","lang","utc","mom","start","locale","end","Math","abs","format","dayOfYear","year","init","Translator","registerModule","momentLang","replace","zero","timeago","key","duration","ms","parseInt","from","to","timeDateView","timezone","isAllday","data","localeData","n","a","name","args","map","x","test","index"],"mappings":"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","file":"translatorModule.js","sourcesContent":["import moment from 'moment';\r\n\r\nconst justDate = 'dddd, LL';\r\nconst justTime = 'LT';\r\nconst dateAndTime = 'LLLL';\r\n\r\nconst formatDates = (s, e, allday, lang, utc) => {\r\n  const mom = utc ? moment.utc : moment;\r\n\r\n  const start = mom(s).locale(lang);\r\n  const end = mom(e).locale(lang);\r\n\r\n  if (Math.abs(s - e) <= 60 * 1000) {\r\n    if (allday) {\r\n      return start.format(justDate);\r\n    }\r\n    return start.format(dateAndTime);\r\n  }\r\n\r\n  if (\r\n    start.dayOfYear() === end.dayOfYear() &&\r\n    start.year() === end.year()\r\n  ) {\r\n    if (allday) {\r\n      return start.format(justDate);\r\n    }\r\n    return `${start.format(justDate)}<br>` +\r\n      `${start.format(justTime)} - ${end.format(justTime)}`;\r\n  }\r\n\r\n  if (allday) {\r\n    return `${start.format(justDate)} - ${end.format(justDate)}`;\r\n  }\r\n  return `${start.format(dateAndTime)} - ${end.format(dateAndTime)}`;\r\n};\r\n\r\nconst init = (Translator) => {\r\n  Translator.registerModule('moment', (lang) => {\r\n    const momentLang = lang.replace(/[_@]/g, '-');\r\n    const zero = moment(0).locale(momentLang);\r\n\r\n    const timeago = (key, [duration]) => {\r\n      const ms = parseInt(duration, 10);\r\n      switch (key) {\r\n        case 'time-ago':\r\n          return zero.from(ms);\r\n        case 'time-in':\r\n          return zero.to(ms);\r\n        case 'time-duration':\r\n          return zero.to(ms, true);\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n\r\n    const timeDateView = (key, [timezone, start, end, allday]) => {\r\n      const s = parseInt(start, 10);\r\n      const e = parseInt(end, 10);\r\n      const isAllday = allday === 'true';\r\n\r\n      if (timezone === 'utc') {\r\n        return formatDates(s, e, isAllday, momentLang, true);\r\n      }\r\n      if (timezone === 'local') {\r\n        return formatDates(s, e, isAllday, momentLang, false);\r\n      }\r\n      return '';\r\n    };\r\n\r\n    const data = zero.localeData();\r\n    const localeData = (key, [n, ...a]) => {\r\n      let name = n;\r\n      if (!data[name]) {\r\n        name = `_${n}`;\r\n        if (!data[name]) {\r\n          return '';\r\n        }\r\n      }\r\n      const args = a.map((x) => {\r\n        if (x === 'true') {\r\n          return true;\r\n        }\r\n        if (x === 'false') {\r\n          return false;\r\n        }\r\n        if (/^[0-9]+$/.test(x)) {\r\n          return parseInt(x, 10);\r\n        }\r\n        return x;\r\n      });\r\n      if (typeof data[name] === 'function') {\r\n        return data[name](...args);\r\n      }\r\n      const [index] = args;\r\n      return data[name][index];\r\n    };\r\n\r\n    return (key, args) => {\r\n      switch (key) {\r\n        case 'time-in':\r\n        case 'time-ago':\r\n        case 'time-duration':\r\n          return timeago(key, args);\r\n        case 'time-date-view':\r\n          return timeDateView(key, args);\r\n        case 'locale-data':\r\n          return localeData(key, args);\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n  });\r\n};\r\n\r\nexport { formatDates };\r\nexport default init;\r\n"]}