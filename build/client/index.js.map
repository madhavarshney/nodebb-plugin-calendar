{"version":3,"sources":["../../src/client/index.js"],"names":["lang","config","userLang","defaultLang","jQuery","fn","size","length","begin","momentLang","window","requirejs","composer","formatting","translator","benchpress","$","document","ready","Translator","parse","template","translate","html","append","datetimepicker","icons","time","date","up","down","previous","next","today","clear","close","allowInputToggle","locale","sideBySide","useCurrent","createEvent","prepareFormattingTools","addButtonDispatch","textarea","$textarea","oldVal","val","oldEvent","replace","event","text","test","newVal","trigger","on","__webpack_public_path__","RELATIVE_PATH","toLowerCase","require","e","split","er","Error"],"mappings":"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","file":"index.js","sourcesContent":["import 'eonasdan-bootstrap-datetimepicker';\r\nimport moment from 'moment';\r\n\r\nimport './locationHistory';\r\nimport rawTemplate from './templates';\r\nimport setupComposerButton from './setupComposerButton';\r\nimport createEventFactory from './createEvent';\r\nimport parse, { inPost } from '../lib/parse';\r\nimport initResponses from './responses';\r\nimport initTranslation from './clientSideTranslation';\r\nimport initTranslatorModule from '../lib/translatorModule';\r\n\r\nconst lang = config.userLang || config.defaultLang;\r\njQuery.fn.size = jQuery.fn.size || function size() { return this.length; };\r\n\r\nconst begin = (momentLang) => {\r\n  window.requirejs([\r\n    'composer',\r\n    'composer/formatting',\r\n    'translator',\r\n    'benchpress',\r\n  ], (composer, formatting, translator, benchpress) =>\r\n  $(document).ready(() => {\r\n    initTranslatorModule(translator.Translator);\r\n    initTranslation(translator.Translator);\r\n\r\n    benchpress.parse('partials/calendar/event-creation-modal', {}, template =>\r\n    translator.translate(template, lang, (html) => {\r\n      $('body').append(html);\r\n\r\n      setupComposerButton(composer, translator);\r\n      $('.plugin-calendar-event-editor-date').datetimepicker({\r\n        icons: {\r\n          time: 'fa fa-clock-o',\r\n          date: 'fa fa-calendar',\r\n          up: 'fa fa-arrow-up',\r\n          down: 'fa fa-arrow-down',\r\n          previous: 'fa fa-arrow-left',\r\n          next: 'fa fa-arrow-right',\r\n          today: 'fa fa-crosshairs',\r\n          clear: 'fa fa-trash',\r\n          close: 'fa fa-times',\r\n        },\r\n        allowInputToggle: true,\r\n        locale: momentLang,\r\n        sideBySide: true,\r\n        useCurrent: true,\r\n      });\r\n      const createEvent = createEventFactory();\r\n\r\n      const prepareFormattingTools = () => {\r\n        if (!formatting) {\r\n          return;\r\n        }\r\n\r\n        formatting.addButtonDispatch('plugin-calendar-event', (textarea) => {\r\n          const $textarea = $(textarea);\r\n          const oldVal = $textarea.val();\r\n          const oldEvent = parse(oldVal.replace(/\\[(\\/?)event-invalid\\]/g, '[$1event]'));\r\n          createEvent(oldEvent || {}, (event) => {\r\n            const text = event ? rawTemplate(event) : '';\r\n            if (inPost.test(oldVal)) {\r\n              const newVal = oldVal.replace(\r\n                /\\[event(?:-invalid)?\\][\\s\\S]+\\[\\/event(?:-invalid)?\\]/g,\r\n                text\r\n              );\r\n              $textarea.val(newVal);\r\n            } else {\r\n              $textarea.val(`${oldVal}\\n\\n${text}`);\r\n            }\r\n            $textarea.trigger('input');\r\n          });\r\n        });\r\n      };\r\n\r\n      $(window).on('action:composer.enhanced', prepareFormattingTools);\r\n\r\n      initResponses();\r\n    }));\r\n  }));\r\n};\r\n\r\n__webpack_public_path__ = `${RELATIVE_PATH}/plugins/nodebb-plugin-calendar/bundles/`; // eslint-disable-line\r\n\r\nconst momentLang = lang.toLowerCase().replace(/_/g, '-');\r\n\r\ntry {\r\n  if (momentLang === 'en-us') {\r\n    begin('en-us');\r\n  } else {\r\n    require(`moment/locale/${momentLang}`)(() => { // eslint-disable-line\r\n      moment.locale(momentLang);\r\n      begin(momentLang);\r\n    });\r\n  }\r\n} catch (e) {\r\n  try {\r\n    require(`moment/locale/${momentLang.split('-')[0]}`)(() => { // eslint-disable-line\r\n      moment.locale(momentLang);\r\n      begin(momentLang);\r\n    });\r\n  } catch (er) {\r\n    begin('en-us');\r\n    throw Error(`could not load locale data (${momentLang}) for moment`);\r\n  }\r\n}\r\n"]}