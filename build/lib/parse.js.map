{"version":3,"sources":["../../src/lib/parse.js"],"names":["tagTemplate","name","content","regExps","key","pattern","map","push","inPost","RegExp","full","r","join","eventRegExp","parse","text","matches","match","length","results","forEach","m","trim","repeats","allday","startDate","parseInt","endDate","reminders","JSON","sort","a","b","location","description","mandatory","replace","e","templates","event","default"],"mappings":"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","file":"parse.js","sourcesContent":["const tagTemplate = (name, content) =>\r\n  `\\\\s*\\\\[${name}\\\\](${content})\\\\[\\\\/${name}\\\\]\\\\s*`;\r\n\r\nconst regExps = [\r\n  { key: 'name', pattern: '.*' },\r\n  { key: 'allday', pattern: 'true|false' },\r\n  { key: 'startDate', pattern: '[0-9]+' },\r\n  { key: 'endDate', pattern: '[0-9]+' },\r\n  { key: 'reminders', pattern: '\\\\[[0-9, ]*\\\\]' },\r\n  { key: 'location', pattern: '.*' },\r\n  { key: 'description', pattern: '[\\\\s\\\\S]*' },\r\n  { key: 'mandatory', pattern: 'true|false' },\r\n].map(({ key, pattern }) => ({\r\n  key,\r\n  pattern: tagTemplate(key, pattern),\r\n}));\r\n\r\nregExps.push({\r\n  key: 'repeats',\r\n  pattern: '\\\\s*(?:\\\\[repeats\\\\](.*)\\\\[\\\\/repeats\\\\])?\\\\s*',\r\n});\r\n\r\nconst inPost = new RegExp(\r\n  '(\\\\[event(?:\\\\-invalid)?\\\\][\\\\s\\\\S]+\\\\[\\\\/event(?:\\\\-invalid)?\\\\])'\r\n);\r\n\r\nconst full = regExps.map(r => r.pattern).join('');\r\nconst eventRegExp = tagTemplate('event', full);\r\n\r\nconst parse = (text) => {\r\n  const matches = text.match(eventRegExp);\r\n  if (!matches || !matches.length) {\r\n    return null;\r\n  }\r\n  const match = matches[1];\r\n  const results = {};\r\n  regExps.forEach(({ key, pattern }) => {\r\n    const m = match.match(pattern);\r\n    results[key] = m && m[1] && m[1].trim();\r\n  });\r\n\r\n  results.repeats = match.match(/\\[repeats\\](.*)\\[\\/repeats\\]/);\r\n  results.repeats = results.repeats && results.repeats[1];\r\n\r\n  try {\r\n    return {\r\n      name: results.name,\r\n      allday: results.allday === 'true',\r\n      startDate: parseInt(results.startDate, 10),\r\n      endDate: parseInt(results.endDate, 10),\r\n      reminders: JSON.parse(results.reminders).sort((a, b) => b - a),\r\n      location: results.location,\r\n      description: results.description,\r\n      mandatory: results.mandatory === 'true',\r\n      repeats: results.repeats ? JSON.parse(results.repeats.replace(/&quot;/g, '\"')) : null,\r\n    };\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst templates = {\r\n  ...regExps,\r\n  event: eventRegExp,\r\n};\r\n\r\nexport {\r\n  parse as default,\r\n  tagTemplate,\r\n  templates,\r\n  inPost,\r\n};\r\n"]}